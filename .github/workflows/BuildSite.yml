# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy SLiCAP site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  buildpackage: ${{ github.event_name == 'release' || github.event_name == 'workflow_dispatch' }}
  pypipublish: ${{github.event_name == 'release'}}
  TESTpublish: ${{github.event_name != 'release'}}

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SLiCAP repository
        uses: actions/checkout@v3
        with:
          repository: SLiCAP/SLiCAP_python
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install SLiCAP documentation dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - name: make html files
        run: |
          cd ./docs
          make html
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: "SLiCAP/docs/html"
      # Archive documentation used for building and packaging
      - name: Upload documentation artifact
        if: ${{env.buildpackage}}
        id: documentation
        uses: actions/upload-artifact@v4
        with:
          name: "allDocs"
          path: "SLiCAP/docs"

  # Deploy Documentationenv_var
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Build and Package
  BuildPackage:
    needs: build
    env:
      buildpackage: ${{env.buildpackage}}
    if: env.buildpackage
    uses: ./.github/workflows/BuildPackage.yml


